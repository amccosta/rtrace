/* SUIT version 2.3 */

#define THE_SCREEN_WIDTH 768
#define THE_SCREEN_HEIGHT 600
#define THE_SCREEN_DEPTH 5

#include "suit.h"


/*--------------------------------------------------------------------------------*/
/*                                                                                */
/*                                  NOTE:                                         */
/*                                                                                */
/*    This file contains all the permanent properties of this application's       */
/*    objects and is read in as a data file.  Compiling this file as part of      */
/*    your application "hard codes" your interface.  Please see "shipping"        */
/*    in the SUIT reference manual for further information.                       */
/*                                                                                */
/*                                                                                */
/*                              !! DANGER !!                                      */
/*                                                                                */
/*      This file is machine-generated, and its contents are very important.      */
/*                                                                                */
/*          If you must edit this file, do so with extreme caution!               */
/*                                                                                */
/*                              !! DANGER !!                                      */
/*                                                                                */
/*--------------------------------------------------------------------------------*/


extern void SUIT_interiorInitFromCode (char *programName, SUIT_functionPointer suiRoutine,
                                       int width, int height, int depth);

extern SUIT_type *si_getType(char *typeName);

extern void si_addChildToObject(SUIT_object, SUIT_object, boolean);

static void MAKE (char *name, char *class, char *parent, boolean interactive) 
{ 
    SUIT_object o = SUIT_name(name); 
    SUIT_object p = SUIT_name(parent); 
    if (p != NULL) {
        if (o == NULL) 
            o = SUIT_createObjectByClass(name, class); 
            if (interactive) {
                SUIT_setBoolean (o, INTERACTIVELY_CREATED, TRUE);
                SUIT_makePropertyTemporary (o, INTERACTIVELY_CREATED, OBJECT);
            }
        si_addChildToObject(SUIT_name(parent), o, FALSE); 
    }
} 
 


static void SET (char *objOrClass, char *propertyName, char *propertyType, boolean atClass,
                 boolean locked, char *stringValue) 
{ 
    SUIT_type       *type; 
    boolean errorStatus; 
    Pointer retval; 
    SUIT_level level = OBJECT; 
    SUIT_object o; 
     
    if (atClass) 
        level = CLASS; 
    if (level == CLASS) 
        o = SUIT_dummyObjectInClass(objOrClass); 
    else 
        o = SUIT_name(objOrClass); 
    type = si_getType(propertyType); 
    retval = type->convertFromAscii(stringValue, &errorStatus); 
    if (errorStatus == FALSE) 
    SUIT_setProperty(o, propertyName, propertyType, retval, level); 

    if (locked) 
        SUIT_lockProperty(o, propertyName, level); 
}


static void INIT_suiRoutine(void)
{
/* This line is for parsing simplicity -- do NOT remove it!  @ */
MAKE("hstacker","stacker","ROOT",1);
MAKE("hambientlevels's \"visible\"","on/off switch","hstacker",1);
MAKE("hambientthresh's \"visible\"","on/off switch","hstacker",1);
MAKE("hambientlev's \"visible\"","on/off switch","hstacker",1);
MAKE("hantialias's \"visible\"","on/off switch","hstacker",1);
MAKE("unnamed object 0's \"visible\"","on/off switch","hstacker",1);
MAKE("haliasthresh's \"visible\"","on/off switch","hstacker",1);
MAKE("heyesep's \"visible\"","on/off switch","hstacker",1);
MAKE("himagewh's \"visible\"","on/off switch","hstacker",1);
MAKE("hfocaldist's \"visible\"","on/off switch","hstacker",1);
MAKE("hfocalaper's \"visible\"","on/off switch","hstacker",1);
MAKE("hintersect's \"visible\"","on/off switch","hstacker",1);
MAKE("hintadjust's \"visible\"","on/off switch","hstacker",1);
MAKE("hlighting's \"visible\"","on/off switch","hstacker",1);
MAKE("backfhelp's \"visible\"","on/off switch","hstacker",1);
MAKE("hjittesampl's \"visible\"","on/off switch","hstacker",1);
MAKE("hview's \"visible\"","on/off switch","hstacker",1);
MAKE("hcontrast's \"visible\"","on/off switch","hstacker",1);
MAKE("himageback's \"visible\"","on/off switch","hstacker",1);
MAKE("himageraw's \"visible\"","on/off switch","hstacker",1);
MAKE("hshadlevel's \"visible\"","on/off switch","hstacker",1);
MAKE("htexture's \"visible\"","on/off switch","hstacker",1);
MAKE("hshadthresh's \"visible\"","on/off switch","hstacker",1);
MAKE("hnormal's \"visible\"","on/off switch","hstacker",1);
MAKE("hsupersampl's \"visible\"","on/off switch","hstacker",1);
MAKE("htextnormals's \"visible\"","on/off switch","hstacker",1);
MAKE("hshading's \"visible\"","on/off switch","hstacker",1);
MAKE("counter min","label","ROOT",1);
MAKE("Counter","bounded value","ROOT",0);
MAKE("hauthor","text box","ROOT",1);
MAKE("hstacker's \"visible\"","on/off switch","ROOT",1);
MAKE("backfhelp","text box","ROOT",1);
MAKE("lnormals","label","ROOT",1);
MAKE("Separation","pulldown menu","ROOT",0);
MAKE("Backface","radio buttons","ROOT",0);
MAKE("backfacelabel","label","ROOT",1);
MAKE("Intersect","radio buttons","ROOT",0);
MAKE("Normals","radio buttons","ROOT",0);
MAKE("lsupersampling","label","ROOT",1);
MAKE("Antialiasing","radio buttons","ROOT",0);
MAKE("lintersect","label","ROOT",1);
MAKE("Lighting","radio buttons","ROOT",0);
MAKE("llighting","label","ROOT",1);
MAKE("Textures","radio buttons","ROOT",0);
MAKE("View","radio buttons","ROOT",0);
MAKE("ltextures","label","ROOT",1);
MAKE("lview","label","ROOT",1);
MAKE("Shading","radio buttons","ROOT",0);
MAKE("Format","radio buttons","ROOT",0);
MAKE("lformat","label","ROOT",1);
MAKE("lshading","label","ROOT",1);
MAKE("LevelSampling","type in box","ROOT",0);
MAKE("LevelShading","type in box","ROOT",0);
MAKE("ThresAliasing","type in box","ROOT",0);
MAKE("ThresShading","type in box","ROOT",0);
MAKE("Height","type in box","ROOT",0);
MAKE("Width","type in box","ROOT",0);
MAKE("Distance","type in box","ROOT",0);
MAKE("levels","label","ROOT",1);
MAKE("himageback","text box","ROOT",1);
MAKE("himageraw","text box","ROOT",1);
MAKE("hcontrast","text box","ROOT",1);
MAKE("hview","text box","ROOT",1);
MAKE("hjittesampl","text box","ROOT",1);
MAKE("htexture","text box","ROOT",1);
MAKE("hsupersampl","text box","ROOT",1);
MAKE("hshadthresh","text box","ROOT",1);
MAKE("hshadlevel","text box","ROOT",1);
MAKE("hshading","text box","ROOT",1);
MAKE("height label","label","ROOT",1);
MAKE("width label","label","ROOT",1);
MAKE("LevelAmbient","type in box","ROOT",0);
MAKE("ThresAmbient","type in box","ROOT",0);
MAKE("amb level","label","ROOT",1);
MAKE("samp level","label","ROOT",1);
MAKE("shade level","label","ROOT",1);
MAKE("aliasing label","label","ROOT",1);
MAKE("shading label","label","ROOT",1);
MAKE("ambient label","label","ROOT",1);
MAKE("thres label","label","ROOT",1);
MAKE("hauthor's \"visible\"","on/off switch","ROOT",1);
MAKE("Files","pulldown menu","ROOT",0);
MAKE("Stop","button","ROOT",0);
MAKE("Abort","button","ROOT",0);
MAKE("Go","button","ROOT",0);
MAKE("hnormal","text box","ROOT",1);
MAKE("hlighting","text box","ROOT",1);
MAKE("hintadjust","text box","ROOT",1);
MAKE("hintersect","text box","ROOT",1);
MAKE("htextnormals","text box","ROOT",1);
MAKE("hfocalaper","text box","ROOT",1);
MAKE("hfocaldist","text box","ROOT",1);
MAKE("himagewh","text box","ROOT",1);
MAKE("heyesep","text box","ROOT",1);
MAKE("haliasthresh","text box","ROOT",1);
MAKE("unnamed object 0","text box","ROOT",1);
MAKE("hantialias","text box","ROOT",1);
MAKE("hambientlev","text box","ROOT",1);
MAKE("hambientthresh","text box","ROOT",1);
MAKE("hambientlevels","text box","ROOT",1);
MAKE("label distance","label","ROOT",1);
MAKE("label aperture","label","ROOT",1);
MAKE("Files: menu","menu","ROOT",0);
MAKE("SFF file","button","Files: menu",0);
MAKE("Picture file","button","Files: menu",0);
MAKE("Separation: menu","menu","ROOT",0);
MAKE("Absolute","button","Separation: menu",0);
MAKE("% of Gaze","button","Separation: menu",0);
MAKE("Aperture","type in box","ROOT",0);
MAKE("Messages's \"visible\"","on/off switch","ROOT",1);
MAKE("message label","label","ROOT",1);
MAKE("onoff stacker","stacker","ROOT",1);
MAKE("TextNormals","on/off switch","onoff stacker",1);
MAKE("Jitter","on/off switch","onoff stacker",1);
MAKE("Adjust","on/off switch","onoff stacker",1);
MAKE("Contrast","on/off switch","onoff stacker",1);
MAKE("Raw","on/off switch","onoff stacker",1);
MAKE("Back","on/off switch","onoff stacker",1);
MAKE("Messages","text editor with scrollbar","ROOT",0);
MAKE("Messages: text editor","text editor","Messages",0);
MAKE("Messages: scroll bar","bounded value","Messages",0);
MAKE("cluster label","label","ROOT",1);
MAKE("Cluster","type in box","ROOT",0);
MAKE("Samples","type in box","ROOT",0);
MAKE("samples label","label","ROOT",1);
MAKE("message place mat","place mat","ROOT",1);
MAKE("place 0","place mat","ROOT",1);
MAKE("thres place","place mat","ROOT",1);
MAKE("level mat","place mat","ROOT",1);
SET("arrow button","border raised","boolean",1,0,"no");
SET("arrow button","changed class","boolean",1,0,"no");
SET("arrow button","darken background","boolean",1,0,"yes");
SET("arrow button","direction","SUIT_enum",1,0,"\"up\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("arrow button","draw filled","boolean",1,0,"no");
SET("arrow button","has background","boolean",1,0,"no");
SET("arrow button","intermediate feedback","boolean",1,0,"no");
SET("arrow button","shadow thickness","int",1,0,"3");
SET("billboard","border raised","boolean",1,0,"no");
SET("billboard","changed class","boolean",1,0,"no");
SET("borderless bulletin board","border raised","boolean",1,0,"no");
SET("borderless bulletin board","changed class","boolean",1,0,"no");
SET("borderless bulletin board","has border","boolean",1,0,"no");
SET("borderless file box","changed class","boolean",1,0,"no");
SET("borderless file box","file filter","text",1,0,"");
SET("borderless file box","has border","boolean",1,0,"no");
SET("bounded value","arrowhead angle","int",1,0,"10");
SET("bounded value","arrowhead length","double",1,0,"0.2000000");
SET("bounded value","button background color","GP_color",1,0,"black, black");
SET("bounded value","button foreground color","GP_color",1,0,"grey, white");
SET("bounded value","changed class","boolean",1,0,"no");
SET("bounded value","current value","double",1,0,"0.0000000");
SET("bounded value","granularity","double",1,0,"0.0000000");
SET("bounded value","has arrow","boolean",1,0,"yes");
SET("bounded value","has tick marks","boolean",1,0,"yes");
SET("bounded value","increase clockwise","boolean",1,0,"yes");
SET("bounded value","interactively created","boolean",1,0,"no");
SET("bounded value","minimum value","double",1,0,"0.0000000");
SET("bounded value","needle color","GP_color",1,0,"black, black");
SET("bounded value","start angle","double",1,0,"0.0000000");
SET("button","changed class","boolean",1,0,"no");
SET("button","disabled color","GP_color",1,0,"(44414 44414 44414), white");
SET("button","hotkey","text",1,0,"");
SET("button","interactively created","boolean",1,0,"no");
SET("button","justification","SUIT_enum",1,0,"\"center\" of {\"left\" \"center\" \"right\"}");
SET("button","shrink to fit","boolean",1,0,"no");
SET("color chips","changed class","boolean",1,0,"no");
SET("color chips","chip border","double",1,0,"0.0800000");
SET("color chips","has background","boolean",1,0,"no");
SET("color chips","highlight color","GP_color",1,0,"black, black");
SET("dialog box","border type","SUIT_enum",1,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("dialog box","border width","int",1,0,"8");
SET("dialog box","cache using canvas","boolean",1,0,"yes");
SET("dialog box","canvas number","int",1,0,"0");
SET("dialog box","changed class","boolean",1,0,"no");
SET("elevator","border raised","boolean",1,0,"no");
SET("elevator","changed class","boolean",1,0,"no");
SET("elevator","has background","boolean",1,0,"no");
SET("elevator","sliding","boolean",1,0,"no");
SET("font panel","border raised","boolean",1,0,"no");
SET("font panel","changed class","boolean",1,0,"no");
SET("font panel","has border","boolean",1,0,"no");
SET("label","changed class","boolean",1,0,"no");
SET("label","has border","boolean",1,0,"no");
SET("label","justification","SUIT_enum",1,0,"\"center\" of {\"left\" \"center\" \"right\"}");
SET("label","shrink to fit","boolean",1,0,"no");
SET("list","border raised","boolean",1,0,"no");
SET("list","changed class","boolean",1,0,"no");
SET("list","text spacing","double",1,0,"1.2000000");
SET("menu","cache using canvas","boolean",1,0,"yes");
SET("menu","changed class","boolean",1,0,"no");
SET("menu","interactively created","boolean",1,0,"no");
SET("on/off switch","border raised","boolean",1,0,"yes");
SET("on/off switch","border width","int",1,0,"0");
SET("on/off switch","changed class","boolean",1,0,"no");
SET("on/off switch","disabled color","GP_color",1,0,"(44414 44414 44414), white");
SET("on/off switch","font","GP_font",1,0,"times,,14.0000000");
SET("on/off switch","interactively created","boolean",1,0,"yes");
SET("on/off switch","original height","int",1,0,"0");
SET("on/off switch","original width","int",1,0,"0");
SET("on/off switch","shrink to fit","boolean",1,0,"yes");
SET("p.e.collection","border raised","boolean",1,0,"no");
SET("p.e.collection","changed class","boolean",1,0,"no");
SET("place mat","border raised","boolean",1,0,"no");
SET("place mat","changed class","boolean",1,0,"no");
SET("property editor","border raised","boolean",1,0,"no");
SET("property editor","changed class","boolean",1,0,"no");
SET("property list","border raised","boolean",1,0,"no");
SET("property list","changed class","boolean",1,0,"no");
SET("property list","text spacing","double",1,0,"1.5000000");
SET("pulldown menu","changed class","boolean",1,0,"no");
SET("pulldown menu","interactively created","boolean",1,0,"no");
SET("radio buttons","changed class","boolean",1,0,"no");
SET("radio buttons","current value","SUIT_enum",1,0,"\"default value\" of {\"default value\"}");
SET("radio buttons","interactively created","boolean",1,0,"no");
SET("scrollable list","border raised","boolean",1,0,"no");
SET("scrollable list","changed class","boolean",1,0,"no");
SET("scrollable list","has background","boolean",1,0,"no");
SET("scrollable list","has border","boolean",1,0,"no");
SET("scrollable property list","border raised","boolean",1,0,"no");
SET("scrollable property list","changed class","boolean",1,0,"no");
SET("scrollable property list","has background","boolean",1,0,"no");
SET("scrollable property list","has border","boolean",1,0,"no");
SET("stacker","changed class","boolean",1,0,"no");
SET("stacker","disabled color","GP_color",1,0,"(27159 27159 27159), white");
SET("stacker","shrink to fit","boolean",1,0,"no");
SET("text box","changed class","boolean",1,0,"no");
SET("text box","interactively created","boolean",1,0,"no");
SET("text editor","any keystroke triggers","boolean",1,0,"no");
SET("text editor","backward char key","text",1,0,"C-b");
SET("text editor","beginning of line key","text",1,0,"C-a");
SET("text editor","beginning of text key","text",1,0,"M-<");
SET("text editor","border raised","boolean",1,0,"no");
SET("text editor","calculate lines","boolean",1,0,"no");
SET("text editor","changed class","boolean",1,0,"no");
SET("text editor","cursor color","GP_color",1,0,"black, black");
SET("text editor","cursor index","int",1,0,"0");
SET("text editor","cursor style","SUIT_enum",1,0,"\"vertical bar\" of {\"i-beam\" \"vertical bar\"}");
SET("text editor","delete char key","text",1,0,"C-d");
SET("text editor","delete entire line key","text",1,0,"C-u");
SET("text editor","done editing key","text",1,0,"C-x");
SET("text editor","double click time","double",1,0,"400000.0000000");
SET("text editor","end of line key","text",1,0,"C-e");
SET("text editor","end of text key","text",1,0,"M->");
SET("text editor","forward char key","text",1,0,"C-f");
SET("text editor","has a tab","boolean",1,0,"no");
SET("text editor","highlight block","boolean",1,0,"no");
SET("text editor","interactively created","boolean",1,0,"no");
SET("text editor","kill line key","text",1,0,"C-k");
SET("text editor","last mark index","int",1,0,"0");
SET("text editor","mark end index","int",1,0,"0");
SET("text editor","mark index","int",1,0,"0");
SET("text editor","newline key","text",1,0,"C-m");
SET("text editor","next line key","text",1,0,"C-n");
SET("text editor","open line key","text",1,0,"C-o");
SET("text editor","previous line key","text",1,0,"C-p");
SET("text editor","repaint key","text",1,0,"C-l");
SET("text editor","scroll down key","text",1,0,"M-v");
SET("text editor","scroll up key","text",1,0,"C-v");
SET("text editor","set mark key","text",1,0,"C-`");
SET("text editor","spacing gap","int",1,0,"3");
SET("text editor","start x","int",1,0,"0");
SET("text editor","start y","double",1,0,"0.0000000");
SET("text editor","tab key","text",1,0,"C-i");
SET("text editor","tab length","int",1,0,"5");
SET("text editor","wipe block key","text",1,0,"C-w");
SET("text editor","yank key","text",1,0,"C-y");
SET("text editor with scrollbar","border raised","boolean",1,0,"no");
SET("text editor with scrollbar","changed class","boolean",1,0,"no");
SET("text editor with scrollbar","interactively created","boolean",1,0,"no");
SET("type in box","any keystroke triggers","boolean",1,0,"no");
SET("type in box","append to buffer","boolean",1,0,"no");
SET("type in box","backward char key","text",1,0,"C-b");
SET("type in box","beginning of line key","text",1,0,"C-a");
SET("type in box","beginning of text key","text",1,0,"M-<");
SET("type in box","border raised","boolean",1,0,"no");
SET("type in box","calculate lines","boolean",1,0,"no");
SET("type in box","changed class","boolean",1,0,"no");
SET("type in box","cursor color","GP_color",1,0,"black, black");
SET("type in box","cursor index","int",1,0,"0");
SET("type in box","cursor style","SUIT_enum",1,0,"\"vertical bar\" of {\"i-beam\" \"vertical bar\"}");
SET("type in box","delete char key","text",1,0,"C-d");
SET("type in box","delete entire line key","text",1,0,"C-u");
SET("type in box","done editing key","text",1,0,"C-x");
SET("type in box","double click time","double",1,0,"400000.0000000");
SET("type in box","end of line key","text",1,0,"C-e");
SET("type in box","end of text key","text",1,0,"M->");
SET("type in box","font","GP_font",1,0,"new century schoolbook,,14.0000000");
SET("type in box","forward char key","text",1,0,"C-f");
SET("type in box","has a tab","boolean",1,0,"no");
SET("type in box","highlight block","boolean",1,0,"no");
SET("type in box","input sequence","text",1,0,"");
SET("type in box","interactively created","boolean",1,0,"no");
SET("type in box","kill line key","text",1,0,"C-k");
SET("type in box","last click time","double",1,0,"0.0000000");
SET("type in box","last mark index","int",1,0,"0");
SET("type in box","mark end index","int",1,0,"0");
SET("type in box","mark index","int",1,0,"0");
SET("type in box","newline key","text",1,0,"C-m");
SET("type in box","next line key","text",1,0,"C-n");
SET("type in box","open line key","text",1,0,"C-o");
SET("type in box","pre cursor index","int",1,0,"0");
SET("type in box","previous line key","text",1,0,"C-p");
SET("type in box","repaint key","text",1,0,"C-l");
SET("type in box","scroll down key","text",1,0,"M-v");
SET("type in box","scroll up key","text",1,0,"C-v");
SET("type in box","set mark key","text",1,0,"C-`");
SET("type in box","shrink to fit","boolean",1,0,"yes");
SET("type in box","spacing gap","int",1,0,"3");
SET("type in box","start x","int",1,0,"0");
SET("type in box","start y","double",1,0,"0.0000000");
SET("type in box","tab key","text",1,0,"C-i");
SET("type in box","tab length","int",1,0,"5");
SET("type in box","wipe block key","text",1,0,"C-w");
SET("type in box","yank key","text",1,0,"C-y");
SET("ROOT","animated","boolean",0,0,"no");
SET("ROOT","background color","GP_color",0,0,"grey, white");
SET("ROOT","border color","GP_color",0,0,"grey, black");
SET("ROOT","border raised","boolean",0,0,"yes");
SET("ROOT","border type","SUIT_enum",0,0,"\"motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("ROOT","border width","int",0,0,"2");
SET("ROOT","changed class","boolean",0,0,"no");
SET("ROOT","clip to viewport","boolean",0,0,"yes");
SET("ROOT","default object height","int",0,0,"80");
SET("ROOT","default object width","int",0,0,"80");
SET("ROOT","disabled color","GP_color",0,0,"(65535 65535 65535), white");
SET("ROOT","draw border on inside","boolean",0,0,"no");
SET("ROOT","font","GP_font",0,0,"times,,18.0000000");
SET("ROOT","foreground color","GP_color",0,0,"black, black");
SET("ROOT","has background","boolean",0,0,"yes");
SET("ROOT","has border","boolean",0,0,"yes");
SET("ROOT","margin","int",0,0,"5");
SET("ROOT","show temporary properties","boolean",0,0,"no");
SET("ROOT","shrink to fit","boolean",0,0,"no");
SET("ROOT","springiness","SUIT_springiness",0,0,"63");
SET("ROOT","SUIT system font","GP_font",0,0,"new century schoolbook,,12.0000000");
SET("ROOT","viewport","viewport",0,1,"0 0 767 599");
SET("ROOT","visible","boolean",0,0,"yes");
SET("ROOT","window","window",0,1,"0.0000000 0.0000000 1.0000000 1.0000000");
SET("hstacker","active display","SUIT_enum",0,0,"\"vertical stacking\" of {\"horizontal stacking\" \"vertical stacking\"}");
SET("hstacker","shrink to fit","boolean",0,0,"no");
SET("hstacker","viewport","viewport",0,0,"480 14 647 591");
SET("hstacker","visible","boolean",0,1,"no");
SET("hambientlevels's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hambientlevels's \"visible\"","border width","int",0,0,"0");
SET("hambientlevels's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hambientlevels's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hambientlevels's \"visible\"","chained to object","text",0,0,"hambientlevels");
SET("hambientlevels's \"visible\"","chained to property","text",0,0,"visible");
SET("hambientlevels's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hambientlevels's \"visible\"","current value","boolean",0,0,"no");
SET("hambientlevels's \"visible\"","disabled","boolean",0,0,"no");
SET("hambientlevels's \"visible\"","label","text",0,0,"Ambient Levels");
SET("hambientlevels's \"visible\"","original height","int",0,1,"19");
SET("hambientlevels's \"visible\"","original width","int",0,1,"160");
SET("hambientlevels's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hambientlevels's \"visible\"","viewport","viewport",0,0,"4 556 163 575");
SET("hambientthresh's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hambientthresh's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hambientthresh's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hambientthresh's \"visible\"","chained to object","text",0,0,"hambientthresh");
SET("hambientthresh's \"visible\"","chained to property","text",0,0,"visible");
SET("hambientthresh's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hambientthresh's \"visible\"","current value","boolean",0,0,"no");
SET("hambientthresh's \"visible\"","disabled","boolean",0,0,"no");
SET("hambientthresh's \"visible\"","label","text",0,0,"Ambient Threshold");
SET("hambientthresh's \"visible\"","original height","int",0,1,"19");
SET("hambientthresh's \"visible\"","original width","int",0,1,"160");
SET("hambientthresh's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hambientthresh's \"visible\"","viewport","viewport",0,0,"4 534 163 552");
SET("hambientlev's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hambientlev's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hambientlev's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hambientlev's \"visible\"","chained to object","text",0,0,"hambientlev");
SET("hambientlev's \"visible\"","chained to property","text",0,0,"visible");
SET("hambientlev's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hambientlev's \"visible\"","current value","boolean",0,0,"no");
SET("hambientlev's \"visible\"","disabled","boolean",0,0,"no");
SET("hambientlev's \"visible\"","label","text",0,0,"Ambient Samples");
SET("hambientlev's \"visible\"","original height","int",0,1,"20");
SET("hambientlev's \"visible\"","original width","int",0,1,"193");
SET("hambientlev's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hambientlev's \"visible\"","viewport","viewport",0,0,"4 512 163 530");
SET("hantialias's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hantialias's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hantialias's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hantialias's \"visible\"","chained to object","text",0,0,"hantialias");
SET("hantialias's \"visible\"","chained to property","text",0,0,"visible");
SET("hantialias's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hantialias's \"visible\"","current value","boolean",0,0,"no");
SET("hantialias's \"visible\"","disabled","boolean",0,0,"no");
SET("hantialias's \"visible\"","label","text",0,0,"Antialiasing");
SET("hantialias's \"visible\"","original height","int",0,1,"18");
SET("hantialias's \"visible\"","original width","int",0,1,"193");
SET("hantialias's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hantialias's \"visible\"","viewport","viewport",0,0,"4 490 163 508");
SET("unnamed object 0's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("unnamed object 0's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("unnamed object 0's \"visible\"","chained from property type","text",0,0,"boolean");
SET("unnamed object 0's \"visible\"","chained to object","text",0,0,"unnamed object 0");
SET("unnamed object 0's \"visible\"","chained to property","text",0,0,"visible");
SET("unnamed object 0's \"visible\"","chained to property type","text",0,0,"boolean");
SET("unnamed object 0's \"visible\"","current value","boolean",0,0,"no");
SET("unnamed object 0's \"visible\"","disabled","boolean",0,0,"no");
SET("unnamed object 0's \"visible\"","label","text",0,0,"Cluster Size");
SET("unnamed object 0's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("unnamed object 0's \"visible\"","viewport","viewport",0,0,"4 468 163 486");
SET("haliasthresh's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("haliasthresh's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("haliasthresh's \"visible\"","chained from property type","text",0,0,"boolean");
SET("haliasthresh's \"visible\"","chained to object","text",0,0,"haliasthresh");
SET("haliasthresh's \"visible\"","chained to property","text",0,0,"visible");
SET("haliasthresh's \"visible\"","chained to property type","text",0,0,"boolean");
SET("haliasthresh's \"visible\"","current value","boolean",0,0,"no");
SET("haliasthresh's \"visible\"","disabled","boolean",0,0,"no");
SET("haliasthresh's \"visible\"","label","text",0,0,"Aliasing Threshold");
SET("haliasthresh's \"visible\"","original height","int",0,1,"26");
SET("haliasthresh's \"visible\"","original width","int",0,1,"144");
SET("haliasthresh's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("haliasthresh's \"visible\"","viewport","viewport",0,0,"4 445 163 464");
SET("heyesep's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("heyesep's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("heyesep's \"visible\"","chained from property type","text",0,0,"boolean");
SET("heyesep's \"visible\"","chained to object","text",0,0,"heyesep");
SET("heyesep's \"visible\"","chained to property","text",0,0,"visible");
SET("heyesep's \"visible\"","chained to property type","text",0,0,"boolean");
SET("heyesep's \"visible\"","current value","boolean",0,0,"no");
SET("heyesep's \"visible\"","disabled","boolean",0,0,"no");
SET("heyesep's \"visible\"","label","text",0,0,"Eye Separation");
SET("heyesep's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("heyesep's \"visible\"","viewport","viewport",0,0,"4 423 163 441");
SET("himagewh's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("himagewh's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("himagewh's \"visible\"","chained from property type","text",0,0,"boolean");
SET("himagewh's \"visible\"","chained to object","text",0,0,"himagewh");
SET("himagewh's \"visible\"","chained to property","text",0,0,"visible");
SET("himagewh's \"visible\"","chained to property type","text",0,0,"boolean");
SET("himagewh's \"visible\"","current value","boolean",0,0,"no");
SET("himagewh's \"visible\"","disabled","boolean",0,0,"no");
SET("himagewh's \"visible\"","label","text",0,0,"Image Width/Height");
SET("himagewh's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("himagewh's \"visible\"","viewport","viewport",0,0,"4 401 163 419");
SET("hfocaldist's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hfocaldist's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hfocaldist's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hfocaldist's \"visible\"","chained to object","text",0,0,"hfocaldist");
SET("hfocaldist's \"visible\"","chained to property","text",0,0,"visible");
SET("hfocaldist's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hfocaldist's \"visible\"","current value","boolean",0,0,"no");
SET("hfocaldist's \"visible\"","disabled","boolean",0,0,"no");
SET("hfocaldist's \"visible\"","label","text",0,0,"Focal Distance");
SET("hfocaldist's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hfocaldist's \"visible\"","viewport","viewport",0,0,"4 379 163 397");
SET("hfocalaper's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hfocalaper's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hfocalaper's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hfocalaper's \"visible\"","chained to object","text",0,0,"hfocalaper");
SET("hfocalaper's \"visible\"","chained to property","text",0,0,"visible");
SET("hfocalaper's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hfocalaper's \"visible\"","current value","boolean",0,0,"no");
SET("hfocalaper's \"visible\"","disabled","boolean",0,0,"no");
SET("hfocalaper's \"visible\"","label","text",0,0,"Focal Aperture");
SET("hfocalaper's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hfocalaper's \"visible\"","viewport","viewport",0,0,"4 357 163 375");
SET("hintersect's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hintersect's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hintersect's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hintersect's \"visible\"","chained to object","text",0,0,"hintersect");
SET("hintersect's \"visible\"","chained to property","text",0,0,"visible");
SET("hintersect's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hintersect's \"visible\"","current value","boolean",0,0,"no");
SET("hintersect's \"visible\"","disabled","boolean",0,0,"no");
SET("hintersect's \"visible\"","label","text",0,0,"Intersect");
SET("hintersect's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hintersect's \"visible\"","viewport","viewport",0,0,"4 334 163 353");
SET("hintadjust's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hintadjust's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hintadjust's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hintadjust's \"visible\"","chained to object","text",0,0,"hintadjust");
SET("hintadjust's \"visible\"","chained to property","text",0,0,"visible");
SET("hintadjust's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hintadjust's \"visible\"","current value","boolean",0,0,"no");
SET("hintadjust's \"visible\"","disabled","boolean",0,0,"no");
SET("hintadjust's \"visible\"","label","text",0,0,"Intersect Adjust");
SET("hintadjust's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hintadjust's \"visible\"","viewport","viewport",0,0,"4 312 163 330");
SET("hlighting's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hlighting's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hlighting's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hlighting's \"visible\"","chained to object","text",0,0,"hlighting");
SET("hlighting's \"visible\"","chained to property","text",0,0,"visible");
SET("hlighting's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hlighting's \"visible\"","current value","boolean",0,0,"no");
SET("hlighting's \"visible\"","disabled","boolean",0,0,"no");
SET("hlighting's \"visible\"","label","text",0,0,"Lighting");
SET("hlighting's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hlighting's \"visible\"","viewport","viewport",0,0,"4 290 163 308");
SET("backfhelp's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("backfhelp's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("backfhelp's \"visible\"","chained from property type","text",0,0,"boolean");
SET("backfhelp's \"visible\"","chained to object","text",0,0,"backfhelp");
SET("backfhelp's \"visible\"","chained to property","text",0,0,"visible");
SET("backfhelp's \"visible\"","chained to property type","text",0,0,"boolean");
SET("backfhelp's \"visible\"","current value","boolean",0,0,"no");
SET("backfhelp's \"visible\"","disabled","boolean",0,0,"no");
SET("backfhelp's \"visible\"","label","text",0,0,"Backface Removal");
SET("backfhelp's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("backfhelp's \"visible\"","viewport","viewport",0,0,"4 268 163 286");
SET("hjittesampl's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hjittesampl's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hjittesampl's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hjittesampl's \"visible\"","chained to object","text",0,0,"hjittesampl");
SET("hjittesampl's \"visible\"","chained to property","text",0,0,"visible");
SET("hjittesampl's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hjittesampl's \"visible\"","current value","boolean",0,0,"no");
SET("hjittesampl's \"visible\"","disabled","boolean",0,0,"no");
SET("hjittesampl's \"visible\"","label","text",0,0,"Jittered Sampling");
SET("hjittesampl's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hjittesampl's \"visible\"","viewport","viewport",0,0,"4 246 163 264");
SET("hview's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hview's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hview's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hview's \"visible\"","chained to object","text",0,0,"hview");
SET("hview's \"visible\"","chained to property","text",0,0,"visible");
SET("hview's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hview's \"visible\"","current value","boolean",0,0,"no");
SET("hview's \"visible\"","disabled","boolean",0,0,"no");
SET("hview's \"visible\"","label","text",0,0,"View");
SET("hview's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hview's \"visible\"","viewport","viewport",0,0,"4 223 163 242");
SET("hcontrast's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hcontrast's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hcontrast's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hcontrast's \"visible\"","chained to object","text",0,0,"hcontrast");
SET("hcontrast's \"visible\"","chained to property","text",0,0,"visible");
SET("hcontrast's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hcontrast's \"visible\"","current value","boolean",0,0,"no");
SET("hcontrast's \"visible\"","disabled","boolean",0,0,"no");
SET("hcontrast's \"visible\"","label","text",0,0,"Contrast");
SET("hcontrast's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hcontrast's \"visible\"","viewport","viewport",0,0,"4 201 163 219");
SET("himageback's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("himageback's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("himageback's \"visible\"","chained from property type","text",0,0,"boolean");
SET("himageback's \"visible\"","chained to object","text",0,0,"himageback");
SET("himageback's \"visible\"","chained to property","text",0,0,"visible");
SET("himageback's \"visible\"","chained to property type","text",0,0,"boolean");
SET("himageback's \"visible\"","current value","boolean",0,0,"no");
SET("himageback's \"visible\"","disabled","boolean",0,0,"no");
SET("himageback's \"visible\"","label","text",0,0,"Background Image");
SET("himageback's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("himageback's \"visible\"","viewport","viewport",0,0,"4 179 163 197");
SET("himageraw's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("himageraw's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("himageraw's \"visible\"","chained from property type","text",0,0,"boolean");
SET("himageraw's \"visible\"","chained to object","text",0,0,"himageraw");
SET("himageraw's \"visible\"","chained to property","text",0,0,"visible");
SET("himageraw's \"visible\"","chained to property type","text",0,0,"boolean");
SET("himageraw's \"visible\"","current value","boolean",0,0,"no");
SET("himageraw's \"visible\"","disabled","boolean",0,0,"no");
SET("himageraw's \"visible\"","label","text",0,0,"Raw Image");
SET("himageraw's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("himageraw's \"visible\"","viewport","viewport",0,0,"4 157 163 175");
SET("hshadlevel's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hshadlevel's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hshadlevel's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hshadlevel's \"visible\"","chained to object","text",0,0,"hshadlevel");
SET("hshadlevel's \"visible\"","chained to property","text",0,0,"visible");
SET("hshadlevel's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hshadlevel's \"visible\"","current value","boolean",0,0,"no");
SET("hshadlevel's \"visible\"","disabled","boolean",0,0,"no");
SET("hshadlevel's \"visible\"","label","text",0,0,"Shading Levels");
SET("hshadlevel's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hshadlevel's \"visible\"","viewport","viewport",0,0,"4 135 163 153");
SET("htexture's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("htexture's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("htexture's \"visible\"","chained from property type","text",0,0,"boolean");
SET("htexture's \"visible\"","chained to object","text",0,0,"htexture");
SET("htexture's \"visible\"","chained to property","text",0,0,"visible");
SET("htexture's \"visible\"","chained to property type","text",0,0,"boolean");
SET("htexture's \"visible\"","current value","boolean",0,0,"no");
SET("htexture's \"visible\"","disabled","boolean",0,0,"no");
SET("htexture's \"visible\"","label","text",0,0,"Texture");
SET("htexture's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("htexture's \"visible\"","viewport","viewport",0,0,"4 112 163 131");
SET("hshadthresh's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hshadthresh's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hshadthresh's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hshadthresh's \"visible\"","chained to object","text",0,0,"hshadthresh");
SET("hshadthresh's \"visible\"","chained to property","text",0,0,"visible");
SET("hshadthresh's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hshadthresh's \"visible\"","current value","boolean",0,0,"no");
SET("hshadthresh's \"visible\"","disabled","boolean",0,0,"no");
SET("hshadthresh's \"visible\"","label","text",0,0,"Shading Threshold");
SET("hshadthresh's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hshadthresh's \"visible\"","viewport","viewport",0,0,"4 90 163 108");
SET("hnormal's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hnormal's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hnormal's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hnormal's \"visible\"","chained to object","text",0,0,"hnormal");
SET("hnormal's \"visible\"","chained to property","text",0,0,"visible");
SET("hnormal's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hnormal's \"visible\"","current value","boolean",0,0,"no");
SET("hnormal's \"visible\"","disabled","boolean",0,0,"no");
SET("hnormal's \"visible\"","label","text",0,0,"Normals");
SET("hnormal's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hnormal's \"visible\"","viewport","viewport",0,0,"4 68 163 86");
SET("hsupersampl's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hsupersampl's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hsupersampl's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hsupersampl's \"visible\"","chained to object","text",0,0,"hsupersampl");
SET("hsupersampl's \"visible\"","chained to property","text",0,0,"visible");
SET("hsupersampl's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hsupersampl's \"visible\"","current value","boolean",0,0,"no");
SET("hsupersampl's \"visible\"","disabled","boolean",0,0,"no");
SET("hsupersampl's \"visible\"","label","text",0,0,"Supersampling");
SET("hsupersampl's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hsupersampl's \"visible\"","viewport","viewport",0,0,"4 46 163 64");
SET("htextnormals's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("htextnormals's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("htextnormals's \"visible\"","chained from property type","text",0,0,"boolean");
SET("htextnormals's \"visible\"","chained to object","text",0,0,"htextnormals");
SET("htextnormals's \"visible\"","chained to property","text",0,0,"visible");
SET("htextnormals's \"visible\"","chained to property type","text",0,0,"boolean");
SET("htextnormals's \"visible\"","current value","boolean",0,0,"no");
SET("htextnormals's \"visible\"","disabled","boolean",0,0,"no");
SET("htextnormals's \"visible\"","label","text",0,0,"Texture Normals");
SET("htextnormals's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("htextnormals's \"visible\"","viewport","viewport",0,0,"4 24 163 42");
SET("hshading's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hshading's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hshading's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hshading's \"visible\"","chained to object","text",0,0,"hshading");
SET("hshading's \"visible\"","chained to property","text",0,0,"visible");
SET("hshading's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hshading's \"visible\"","current value","boolean",0,0,"no");
SET("hshading's \"visible\"","disabled","boolean",0,0,"no");
SET("hshading's \"visible\"","label","text",0,0,"Shading");
SET("hshading's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hshading's \"visible\"","viewport","viewport",0,0,"4 2 163 20");
SET("counter min","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("counter min","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("counter min","font","GP_font",0,0,"times,,10.0000000");
SET("counter min","has border","boolean",0,0,"yes");
SET("counter min","label","text",0,0,"0         @bold(% Done)         100");
SET("counter min","viewport","viewport",0,0,"571 556 722 569");
SET("Counter","active display","SUIT_enum",0,0,"\"horizontal thermometer\" of {\"scroll bar\" \"vertical thermometer\" \"horizontal thermometer\" \"pie slice\" \"speedometer\"}");
SET("Counter","arrowhead length","double",0,0,"0.2000000");
SET("Counter","button background color","GP_color",0,0,"grey, white");
SET("Counter","button foreground color","GP_color",0,0,"grey, white");
SET("Counter","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Counter","foreground color","GP_color",0,0,"dark slate blue, white");
SET("Counter","granularity","double",0,0,"0.0500000");
SET("Counter","has tick marks","boolean",0,0,"no");
SET("Counter","maximum value","double",0,0,"1.0100000");
SET("Counter","minimum value","double",0,0,"0.0000000");
SET("Counter","needle color","GP_color",0,0,"yellow, white");
SET("Counter","percent full","double",0,0,"0.2000000");
SET("Counter","viewport","viewport",0,0,"571 576 722 590");
SET("hauthor","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hauthor","font","GP_font",0,0,"times,,14.0000000");
SET("hauthor","label","text",0,0,"@bold(RTrace) 8.3.2  -  a ray tracing program    Copyright 1988-1993 Antonio Costa    Program made by Antonio Costa    DJGPP-SUIT port by Antonio Costa");
SET("hauthor","line spacing","double",0,0,"1.0000000");
SET("hauthor","viewport","viewport",0,0,"15 460 257 541");
SET("hauthor","visible","boolean",0,1,"no");
SET("hstacker's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hstacker's \"visible\"","background color","GP_color",0,0,"dark slate blue, white");
SET("hstacker's \"visible\"","border width","int",0,0,"2");
SET("hstacker's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hstacker's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hstacker's \"visible\"","chained to object","text",0,0,"hstacker");
SET("hstacker's \"visible\"","chained to property","text",0,0,"visible");
SET("hstacker's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hstacker's \"visible\"","current value","boolean",0,0,"no");
SET("hstacker's \"visible\"","disabled","boolean",0,0,"no");
SET("hstacker's \"visible\"","font","GP_font",0,0,"times,,18.0000000");
SET("hstacker's \"visible\"","foreground color","GP_color",0,0,"white, white");
SET("hstacker's \"visible\"","label","text",0,0,"Help");
SET("hstacker's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hstacker's \"visible\"","viewport","viewport",0,0,"57 266 142 295");
SET("backfhelp","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("backfhelp","font","GP_font",0,0,"times,,14.0000000");
SET("backfhelp","label","text",0,0,"@bold(Backface Removal)  -  This options controls how backfacing polygons/triangles are handled. @italic(No) is the default and ensures correctness. @italic(Partial) skips those that face against the tracing ray. @italic(Full) removes all objects that face against the viewer. @italic(Note):  Errors may show up (lack of shadows, holes in objects, etc) in partial or full mode.");
SET("backfhelp","line spacing","double",0,0,"1.0000000");
SET("backfhelp","viewport","viewport",0,0,"15 424 391 544");
SET("backfhelp","visible","boolean",0,1,"no");
SET("lnormals","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lnormals","label","text",0,0,"Normal");
SET("lnormals","viewport","viewport",0,0,"609 435 689 459");
SET("Separation","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Separation","font","GP_font",0,0,"times,,14.0000000");
SET("Separation","has border","boolean",0,0,"yes");
SET("Separation","label","text",0,0,"Stereo separation");
SET("Separation","shrink to fit","boolean",0,0,"no");
SET("Separation","viewport","viewport",0,0,"395 254 507 280");
SET("Separation","visible","boolean",0,0,"no");
SET("Backface","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Backface","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Backface","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Backface","font","GP_font",0,0,"times,,14.0000000");
SET("Backface","shrink to fit","boolean",0,0,"no");
SET("Backface","viewport","viewport",0,0,"548 147 757 203");
SET("backfacelabel","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("backfacelabel","label","text",0,0,"Backface");
SET("backfacelabel","viewport","viewport",0,0,"604 207 699 231");
SET("Intersect","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Intersect","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Intersect","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Intersect","font","GP_font",0,0,"times,,14.0000000");
SET("Intersect","shrink to fit","boolean",0,0,"no");
SET("Intersect","viewport","viewport",0,0,"548 239 756 277");
SET("Intersect","visible","boolean",0,0,"no");
SET("Normals","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Normals","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Normals","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Normals","font","GP_font",0,0,"times,,14.0000000");
SET("Normals","shrink to fit","boolean",0,0,"no");
SET("Normals","viewport","viewport",0,0,"546 396 754 432");
SET("Normals","visible","boolean",0,0,"yes");
SET("lsupersampling","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lsupersampling","label","text",0,0,"Supersampling");
SET("lsupersampling","viewport","viewport",0,0,"586 367 714 391");
SET("Antialiasing","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Antialiasing","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Antialiasing","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Antialiasing","font","GP_font",0,0,"times,,14.0000000");
SET("Antialiasing","shrink to fit","boolean",0,0,"no");
SET("Antialiasing","viewport","viewport",0,0,"547 308 755 364");
SET("Antialiasing","visible","boolean",0,1,"no");
SET("lintersect","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lintersect","label","text",0,0,"Intersect");
SET("lintersect","viewport","viewport",0,0,"609 278 689 302");
SET("Lighting","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Lighting","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Lighting","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Lighting","font","GP_font",0,0,"times,,14.0000000");
SET("Lighting","shrink to fit","boolean",0,0,"no");
SET("Lighting","viewport","viewport",0,0,"546 463 754 514");
SET("Lighting","visible","boolean",0,0,"yes");
SET("llighting","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("llighting","label","text",0,0,"Lighting");
SET("llighting","viewport","viewport",0,0,"616 518 696 542");
SET("Textures","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Textures","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Textures","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Textures","font","GP_font",0,0,"times,,14.0000000");
SET("Textures","shrink to fit","boolean",0,0,"no");
SET("Textures","viewport","viewport",0,0,"195 290 354 346");
SET("Textures","visible","boolean",0,0,"yes");
SET("View","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("View","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("View","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("View","font","GP_font",0,0,"times,,14.0000000");
SET("View","shrink to fit","boolean",0,0,"no");
SET("View","viewport","viewport",0,0,"378 290 523 346");
SET("View","visible","boolean",0,0,"yes");
SET("ltextures","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("ltextures","label","text",0,0,"Textures");
SET("ltextures","viewport","viewport",0,0,"233 349 313 373");
SET("lview","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lview","label","text",0,0,"View");
SET("lview","viewport","viewport",0,0,"412 349 492 373");
SET("Shading","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Shading","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Shading","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Shading","font","GP_font",0,0,"times,,14.0000000");
SET("Shading","shrink to fit","boolean",0,0,"no");
SET("Shading","viewport","viewport",0,0,"194 379 353 414");
SET("Shading","visible","boolean",0,0,"yes");
SET("Format","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Format","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("Format","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Format","font","GP_font",0,0,"times,,14.0000000");
SET("Format","shrink to fit","boolean",0,0,"no");
SET("Format","viewport","viewport",0,0,"377 379 522 414");
SET("Format","visible","boolean",0,0,"yes");
SET("lformat","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lformat","label","text",0,0,"Format");
SET("lformat","viewport","viewport",0,0,"411 417 491 441");
SET("lshading","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("lshading","label","text",0,0,"Shading");
SET("lshading","viewport","viewport",0,0,"232 417 309 441");
SET("LevelSampling","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("LevelSampling","altered","boolean",0,0,"yes");
SET("LevelSampling","append to buffer","boolean",0,0,"no");
SET("LevelSampling","calculate lines","boolean",0,0,"no");
SET("LevelSampling","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("LevelSampling","cursor index","int",0,0,"1");
SET("LevelSampling","cursor x","int",0,0,"13");
SET("LevelSampling","cursor y","int",0,0,"8");
SET("LevelSampling","cut buffer","text",0,0,"0");
SET("LevelSampling","has a tab","boolean",0,0,"no");
SET("LevelSampling","highlight block","boolean",0,0,"no");
SET("LevelSampling","input sequence","text",0,0,"");
SET("LevelSampling","last click time","double",0,0,"83332999510.0000000");
SET("LevelSampling","last mark index","int",0,0,"0");
SET("LevelSampling","mark end index","int",0,0,"0");
SET("LevelSampling","mark index","int",0,0,"0");
SET("LevelSampling","number of lines","int",0,0,"1");
SET("LevelSampling","paint block only","boolean",0,0,"no");
SET("LevelSampling","pre cursor index","int",0,0,"0");
SET("LevelSampling","read only","boolean",0,0,"no");
SET("LevelSampling","start x","int",0,0,"5");
SET("LevelSampling","start y","double",0,0,"23.0000000");
SET("LevelSampling","viewport","viewport",0,0,"454 487 508 515");
SET("LevelShading","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("LevelShading","altered","boolean",0,0,"yes");
SET("LevelShading","append to buffer","boolean",0,0,"no");
SET("LevelShading","calculate lines","boolean",0,0,"no");
SET("LevelShading","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("LevelShading","cursor index","int",0,0,"1");
SET("LevelShading","cursor x","int",0,0,"13");
SET("LevelShading","cursor y","int",0,0,"8");
SET("LevelShading","cut buffer","text",0,0,"1");
SET("LevelShading","has a tab","boolean",0,0,"no");
SET("LevelShading","highlight block","boolean",0,0,"no");
SET("LevelShading","input sequence","text",0,0,"");
SET("LevelShading","last click time","double",0,0,"12796999975.0000000");
SET("LevelShading","last mark index","int",0,0,"0");
SET("LevelShading","mark end index","int",0,0,"0");
SET("LevelShading","mark index","int",0,0,"0");
SET("LevelShading","number of lines","int",0,0,"1");
SET("LevelShading","paint block only","boolean",0,0,"no");
SET("LevelShading","pre cursor index","int",0,0,"0");
SET("LevelShading","read only","boolean",0,0,"no");
SET("LevelShading","start x","int",0,0,"5");
SET("LevelShading","start y","double",0,0,"23.0000000");
SET("LevelShading","viewport","viewport",0,0,"454 453 508 481");
SET("ThresAliasing","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("ThresAliasing","altered","boolean",0,0,"yes");
SET("ThresAliasing","append to buffer","boolean",0,0,"no");
SET("ThresAliasing","calculate lines","boolean",0,0,"yes");
SET("ThresAliasing","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("ThresAliasing","cursor index","int",0,0,"4");
SET("ThresAliasing","cursor x","int",0,0,"5");
SET("ThresAliasing","cursor y","int",0,0,"8");
SET("ThresAliasing","cut buffer","text",0,0,"0288675");
SET("ThresAliasing","has a tab","boolean",0,0,"no");
SET("ThresAliasing","highlight block","boolean",0,0,"no");
SET("ThresAliasing","input sequence","text",0,0,"");
SET("ThresAliasing","last click time","double",0,0,"67242000848.0000000");
SET("ThresAliasing","last mark index","int",0,0,"3");
SET("ThresAliasing","mark end index","int",0,0,"3");
SET("ThresAliasing","mark index","int",0,0,"3");
SET("ThresAliasing","number of lines","int",0,0,"1");
SET("ThresAliasing","paint block only","boolean",0,0,"no");
SET("ThresAliasing","pre cursor index","int",0,0,"3");
SET("ThresAliasing","read only","boolean",0,0,"no");
SET("ThresAliasing","start x","int",0,0,"5");
SET("ThresAliasing","start y","double",0,0,"23.0000000");
SET("ThresAliasing","viewport","viewport",0,0,"271 488 328 516");
SET("ThresAliasing","visible","boolean",0,0,"no");
SET("ThresShading","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("ThresShading","altered","boolean",0,0,"yes");
SET("ThresShading","append to buffer","boolean",0,0,"no");
SET("ThresShading","calculate lines","boolean",0,0,"no");
SET("ThresShading","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("ThresShading","cursor index","int",0,0,"4");
SET("ThresShading","cursor x","int",0,0,"32");
SET("ThresShading","cursor y","int",0,0,"8");
SET("ThresShading","has a tab","boolean",0,0,"no");
SET("ThresShading","highlight block","boolean",0,0,"no");
SET("ThresShading","input sequence","text",0,0,"");
SET("ThresShading","last click time","double",0,0,"61687000631.0000000");
SET("ThresShading","last mark index","int",0,0,"4");
SET("ThresShading","mark end index","int",0,0,"4");
SET("ThresShading","mark index","int",0,0,"4");
SET("ThresShading","number of lines","int",0,0,"1");
SET("ThresShading","paint block only","boolean",0,0,"no");
SET("ThresShading","pre cursor index","int",0,0,"4");
SET("ThresShading","read only","boolean",0,0,"no");
SET("ThresShading","start x","int",0,0,"5");
SET("ThresShading","start y","double",0,0,"23.0000000");
SET("ThresShading","viewport","viewport",0,0,"271 454 328 482");
SET("ThresShading","visible","boolean",0,0,"yes");
SET("Height","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Height","altered","boolean",0,0,"yes");
SET("Height","append to buffer","boolean",0,0,"no");
SET("Height","calculate lines","boolean",0,0,"no");
SET("Height","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Height","cursor index","int",0,0,"2");
SET("Height","cursor x","int",0,0,"21");
SET("Height","cursor y","int",0,0,"8");
SET("Height","cut buffer","text",0,0,"128");
SET("Height","has a tab","boolean",0,0,"no");
SET("Height","highlight block","boolean",0,0,"no");
SET("Height","input sequence","text",0,0,"");
SET("Height","last click time","double",0,0,"59038000071.0000000");
SET("Height","last mark index","int",0,0,"2");
SET("Height","mark end index","int",0,0,"2");
SET("Height","mark index","int",0,0,"2");
SET("Height","number of lines","int",0,0,"1");
SET("Height","paint block only","boolean",0,0,"no");
SET("Height","pre cursor index","int",0,0,"2");
SET("Height","read only","boolean",0,0,"no");
SET("Height","start x","int",0,0,"5");
SET("Height","start y","double",0,0,"23.0000000");
SET("Height","viewport","viewport",0,0,"115 476 167 504");
SET("Width","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Width","altered","boolean",0,0,"yes");
SET("Width","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Width","cut buffer","text",0,0,"128");
SET("Width","has a tab","boolean",0,0,"no");
SET("Width","number of lines","int",0,0,"1");
SET("Width","paint block only","boolean",0,0,"no");
SET("Width","read only","boolean",0,0,"no");
SET("Width","viewport","viewport",0,0,"115 512 167 540");
SET("Distance","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Distance","altered","boolean",0,0,"no");
SET("Distance","calculate lines","boolean",0,0,"no");
SET("Distance","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Distance","cursor x","int",0,0,"5");
SET("Distance","cursor y","int",0,0,"8");
SET("Distance","has a tab","boolean",0,0,"no");
SET("Distance","highlight block","boolean",0,0,"no");
SET("Distance","last mark index","int",0,0,"0");
SET("Distance","number of lines","int",0,0,"1");
SET("Distance","paint block only","boolean",0,0,"no");
SET("Distance","read only","boolean",0,0,"no");
SET("Distance","start x","int",0,0,"5");
SET("Distance","start y","double",0,0,"23.0000000");
SET("Distance","viewport","viewport",0,0,"115 320 167 348");
SET("levels","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("levels","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("levels","has border","boolean",0,0,"yes");
SET("levels","label","text",0,0,"Levels");
SET("levels","viewport","viewport",0,0,"369 561 516 583");
SET("himageback","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("himageback","font","GP_font",0,0,"times,,14.0000000");
SET("himageback","label","text",0,0,"@bold(Background image)  -  This option produces a mask image which can be used as an @italic(alpha channel) for image composition. For each pixel there is a value which describes the proportion of background versus objects seen.");
SET("himageback","line spacing","double",0,0,"1.0000000");
SET("himageback","viewport","viewport",0,0,"13 444 327 545");
SET("himageback","visible","boolean",0,1,"no");
SET("himageraw","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("himageraw","font","GP_font",0,0,"times,,14.0000000");
SET("himageraw","label","text",0,0,"@bold(Raw image)  -  This option produces a file in PIC or PPM format which contains a non-antialiased version of the rendered image. See @bold(Antialiasing).");
SET("himageraw","line spacing","double",0,0,"1.0000000");
SET("himageraw","viewport","viewport",0,0,"13 461 271 545");
SET("himageraw","visible","boolean",0,1,"no");
SET("hcontrast","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hcontrast","font","GP_font",0,0,"times,,14.0000000");
SET("hcontrast","label","text",0,0,"@bold(Contrast)  -  When this option is checked, the supersampling process uses the contrast between pixel samples, which produces a better antialiasing. See @bold(Antialiasing).");
SET("hcontrast","line spacing","double",0,0,"1.0000000");
SET("hcontrast","viewport","viewport",0,0,"13 445 232 545");
SET("hcontrast","visible","boolean",0,1,"no");
SET("hview","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hview","font","GP_font",0,0,"times,,14.0000000");
SET("hview","label","text",0,0,"@bold(View)  -  The program supports stereoscopic viewing, where two images are rendered from slightly different view points, to emulate the separation of human eyes (@italic(stereo separation)). This option lets you choose to render from the left's eye view point or from the right's eye view point. If the view is normal, no stereoscopic offset takes place. See @bold(Eye Separation).");
SET("hview","line spacing","double",0,0,"1.0000000");
SET("hview","viewport","viewport",0,0,"13 407 340 545");
SET("hview","visible","boolean",0,1,"no");
SET("hjittesampl","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hjittesampl","font","GP_font",0,0,"times,,14.0000000");
SET("hjittesampl","label","text",0,0,"@bold(Jittered Sampling)  -  When this option is checked, the program uses jittered sampling, ie, samples inside the pixel not in a regular fashion. Sometimes this option produces better images from scenes with small tricky details.");
SET("hjittesampl","line spacing","double",0,0,"1.0000000");
SET("hjittesampl","viewport","viewport",0,0,"14 441 292 545");
SET("hjittesampl","visible","boolean",0,1,"no");
SET("htexture","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("htexture","font","GP_font",0,0,"times,,14.0000000");
SET("htexture","label","text",0,0,"@bold(Texture)  -  This option lets you specify where the texture information appears in the scene description file. There may be either no textures, or textures defined inside the objects field, or defined after this field. Currently, the program only supports PIC and PPM formats for image texture mapping.");
SET("htexture","line spacing","double",0,0,"1.0000000");
SET("htexture","viewport","viewport",0,0,"13 424 326 545");
SET("htexture","visible","boolean",0,1,"no");
SET("hsupersampl","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hsupersampl","font","GP_font",0,0,"times,,14.0000000");
SET("hsupersampl","label","text",0,0,"@bold(Supersampling)  -  Supersampling refers to the @italic(antialiasing) process where a single pixel is sampled many times, at slightly different positions inside the pixel. A greater number of samples results in smoother edges. However, supersampling significantly slows the rendering. The choices are from 0 (none) to 3 (best). A good compromise is to use 2. See @bold(Antialiasing) and @bold(Antialiasing Threshold).");
SET("hsupersampl","line spacing","double",0,0,"1.0000000");
SET("hsupersampl","viewport","viewport",0,0,"13 388 338 545");
SET("hsupersampl","visible","boolean",0,1,"no");
SET("hshadthresh","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hshadthresh","font","GP_font",0,0,"times,,14.0000000");
SET("hshadthresh","label","text",0,0,"@bold(Shading Threshold)  -  This one of the tree major controls of image quality. It controls shading ray propagation and ranges from 0 (best) to 1 (poor). The good range is 0.01 to 0.001. See @bold(Aliasing Threshold) and @bold(Ambient Threshold).");
SET("hshadthresh","line spacing","double",0,0,"1.0000000");
SET("hshadthresh","viewport","viewport",0,0,"13 444 337 546");
SET("hshadthresh","visible","boolean",0,1,"no");
SET("hshadlevel","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hshadlevel","font","GP_font",0,0,"times,,14.0000000");
SET("hshadlevel","label","text",0,0,"@bold(Shading Levels)  -  This option establishes a maximum shading tree @italic(depth). When a scene has transparent or reflective objects, it may be good to lower this value or else the tracing will take too long. In all cases, there should be no other problem letting it be large.");
SET("hshadlevel","line spacing","double",0,0,"1.0000000");
SET("hshadlevel","viewport","viewport",0,0,"13 425 292 546");
SET("hshadlevel","visible","boolean",0,1,"no");
SET("hshading","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hshading","font","GP_font",0,0,"times,,14.0000000");
SET("hshading","label","text",0,0,"@bold(Shading)  -  This option chooses between shading models. One is @italic(Phong model), the other is @italic(Strauss model), developed by Paul Strauss of SGI. This last one is better, but slower.");
SET("hshading","line spacing","double",0,0,"1.0000000");
SET("hshading","viewport","viewport",0,0,"13 447 264 547");
SET("hshading","visible","boolean",0,1,"no");
SET("height label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("height label","font","GP_font",0,0,"times,,14.0000000");
SET("height label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("height label","label","text",0,0,"Image height:");
SET("height label","viewport","viewport",0,0,"24 477 109 506");
SET("width label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("width label","font","GP_font",0,0,"times,,14.0000000");
SET("width label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("width label","label","text",0,0,"Image width:");
SET("width label","viewport","viewport",0,0,"24 508 109 541");
SET("LevelAmbient","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("LevelAmbient","altered","boolean",0,0,"yes");
SET("LevelAmbient","append to buffer","boolean",0,0,"no");
SET("LevelAmbient","calculate lines","boolean",0,0,"no");
SET("LevelAmbient","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("LevelAmbient","cursor index","int",0,0,"1");
SET("LevelAmbient","cursor x","int",0,0,"13");
SET("LevelAmbient","cursor y","int",0,0,"8");
SET("LevelAmbient","has a tab","boolean",0,0,"no");
SET("LevelAmbient","highlight block","boolean",0,0,"no");
SET("LevelAmbient","input sequence","text",0,0,"");
SET("LevelAmbient","last click time","double",0,0,"83330999090.0000000");
SET("LevelAmbient","last mark index","int",0,0,"0");
SET("LevelAmbient","mark end index","int",0,0,"0");
SET("LevelAmbient","mark index","int",0,0,"0");
SET("LevelAmbient","number of lines","int",0,0,"1");
SET("LevelAmbient","paint block only","boolean",0,0,"no");
SET("LevelAmbient","pre cursor index","int",0,0,"0");
SET("LevelAmbient","read only","boolean",0,0,"no");
SET("LevelAmbient","start x","int",0,0,"5");
SET("LevelAmbient","start y","double",0,0,"23.0000000");
SET("LevelAmbient","viewport","viewport",0,0,"454 521 508 549");
SET("ThresAmbient","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("ThresAmbient","altered","boolean",0,0,"yes");
SET("ThresAmbient","append to buffer","boolean",0,0,"no");
SET("ThresAmbient","calculate lines","boolean",0,0,"yes");
SET("ThresAmbient","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("ThresAmbient","cursor index","int",0,0,"1");
SET("ThresAmbient","cursor x","int",0,0,"5");
SET("ThresAmbient","cursor y","int",0,0,"8");
SET("ThresAmbient","has a tab","boolean",0,0,"no");
SET("ThresAmbient","highlight block","boolean",0,0,"no");
SET("ThresAmbient","input sequence","text",0,0,"");
SET("ThresAmbient","last click time","double",0,0,"12737999575.0000000");
SET("ThresAmbient","last mark index","int",0,0,"0");
SET("ThresAmbient","mark end index","int",0,0,"0");
SET("ThresAmbient","mark index","int",0,0,"0");
SET("ThresAmbient","number of lines","int",0,0,"1");
SET("ThresAmbient","paint block only","boolean",0,0,"no");
SET("ThresAmbient","pre cursor index","int",0,0,"0");
SET("ThresAmbient","read only","boolean",0,0,"no");
SET("ThresAmbient","start x","int",0,0,"5");
SET("ThresAmbient","start y","double",0,0,"23.0000000");
SET("ThresAmbient","viewport","viewport",0,0,"271 522 328 550");
SET("ThresAmbient","visible","boolean",0,0,"no");
SET("amb level","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("amb level","font","GP_font",0,0,"times,,14.0000000");
SET("amb level","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("amb level","label","text",0,0,"Ambient:");
SET("amb level","shrink to fit","boolean",0,0,"yes");
SET("amb level","viewport","viewport",0,0,"378 521 442 549");
SET("samp level","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("samp level","font","GP_font",0,0,"times,,14.0000000");
SET("samp level","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("samp level","label","text",0,0,"Sampling:");
SET("samp level","shrink to fit","boolean",0,0,"yes");
SET("samp level","viewport","viewport",0,0,"374 487 441 515");
SET("shade level","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("shade level","font","GP_font",0,0,"times,,14.0000000");
SET("shade level","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("shade level","label","text",0,0,"Shading:");
SET("shade level","shrink to fit","boolean",0,0,"yes");
SET("shade level","viewport","viewport",0,0,"382 454 442 482");
SET("aliasing label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("aliasing label","font","GP_font",0,0,"times,,14.0000000");
SET("aliasing label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("aliasing label","label","text",0,0,"Ambient:");
SET("aliasing label","viewport","viewport",0,0,"199 526 261 547");
SET("shading label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("shading label","font","GP_font",0,0,"times,,14.0000000");
SET("shading label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("shading label","label","text",0,0,"Aliasing:");
SET("shading label","viewport","viewport",0,0,"199 492 261 513");
SET("ambient label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("ambient label","font","GP_font",0,0,"times,,14.0000000");
SET("ambient label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("ambient label","label","text",0,0,"Shading:");
SET("ambient label","viewport","viewport",0,0,"199 459 261 480");
SET("thres label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("thres label","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("thres label","font","GP_font",0,0,"times,,18.0000000");
SET("thres label","has border","boolean",0,0,"yes");
SET("thres label","label","text",0,0,"Thresholds");
SET("thres label","viewport","viewport",0,0,"201 560 334 583");
SET("hauthor's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("hauthor's \"visible\"","background color","GP_color",0,0,"(20070 27238 37273), white");
SET("hauthor's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("hauthor's \"visible\"","chained from property type","text",0,0,"boolean");
SET("hauthor's \"visible\"","chained to object","text",0,0,"hauthor");
SET("hauthor's \"visible\"","chained to property","text",0,0,"visible");
SET("hauthor's \"visible\"","chained to property type","text",0,0,"boolean");
SET("hauthor's \"visible\"","current value","boolean",0,0,"no");
SET("hauthor's \"visible\"","disabled","boolean",0,0,"no");
SET("hauthor's \"visible\"","font","GP_font",0,0,"times,,18.0000000");
SET("hauthor's \"visible\"","label","text",0,0,"@bold(RTrace) 8.3.2");
SET("hauthor's \"visible\"","shrink to fit","boolean",0,0,"no");
SET("hauthor's \"visible\"","viewport","viewport",0,0,"20 561 159 585");
SET("Files","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Files","has border","boolean",0,0,"yes");
SET("Files","label","text",0,0,"Files");
SET("Files","shrink to fit","boolean",0,0,"no");
SET("Files","viewport","viewport",0,0,"688 108 753 130");
SET("Stop","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Stop","background color","GP_color",0,0,"red, white");
SET("Stop","border raised","boolean",0,0,"yes");
SET("Stop","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Stop","disabled","boolean",0,0,"yes");
SET("Stop","foreground color","GP_color",0,0,"yellow, white");
SET("Stop","has background","boolean",0,0,"yes");
SET("Stop","label","text",0,0,"Stop");
SET("Stop","viewport","viewport",0,0,"688 40 753 63");
SET("Abort","abort callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Abort","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Abort","background color","GP_color",0,0,"brown, white");
SET("Abort","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Abort","disabled","boolean",0,0,"no");
SET("Abort","foreground color","GP_color",0,0,"black, black");
SET("Abort","label","text",0,0,"Exit");
SET("Abort","original height","int",0,1,"30");
SET("Abort","original width","int",0,1,"69");
SET("Abort","viewport","viewport",0,0,"688 7 753 30");
SET("Go","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Go","background color","GP_color",0,0,"green, white");
SET("Go","border raised","boolean",0,0,"yes");
SET("Go","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Go","disabled","boolean",0,0,"no");
SET("Go","foreground color","GP_color",0,0,"black, black");
SET("Go","has background","boolean",0,0,"yes");
SET("Go","label","text",0,0,"Go");
SET("Go","original height","int",0,1,"24");
SET("Go","original width","int",0,1,"66");
SET("Go","viewport","viewport",0,0,"688 75 753 97");
SET("hnormal","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hnormal","font","GP_font",0,0,"times,,14.0000000");
SET("hnormal","label","text",0,0,"@bold(Normal)  -  Normal is used here in the sense of @italic(perpendicular). This option lets you control the correction of surface normals, so that it points against the incident ray. With correct objects, you should let it checked.");
SET("hnormal","line spacing","double",0,0,"1.0000000");
SET("hnormal","viewport","viewport",0,0,"13 435 284 541");
SET("hnormal","visible","boolean",0,1,"no");
SET("hlighting","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hlighting","font","GP_font",0,0,"times,,14.0000000");
SET("hlighting","label","text",0,0,"@bold(Lighting)  -  This option controls the generation of shadow rays through non-opaque objects. There may be either no such shadow rays, partial shadow rays or full shadow rays. If a scene has translucent objects, full or partial shadow rays should be used for the most realistic image.");
SET("hlighting","line spacing","double",0,0,"1.0000000");
SET("hlighting","viewport","viewport",0,0,"13 422 314 542");
SET("hlighting","visible","boolean",0,1,"no");
SET("hintadjust","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hintadjust","font","GP_font",0,0,"times,,14.0000000");
SET("hintadjust","label","text",0,0,"@bold(Intersect Adjust)  -  When this option is checked, the program avoids some problems with invalid self-intersections. Scenes with @italic(text) objects should be traced with this option checked.");
SET("hintadjust","line spacing","double",0,0,"1.0000000");
SET("hintadjust","viewport","viewport",0,0,"13 458 312 542");
SET("hintadjust","visible","boolean",0,1,"no");
SET("hintersect","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hintersect","font","GP_font",0,0,"times,,14.0000000");
SET("hintersect","label","text",0,0,"@bold(Intersect)  -  This option chooses, in @italic(adaptive supersampling mode), between testing all scene objects or only those found at the pixel corners and inside. Testing only at corners and inside greatly reduces CPU time, but with very small objects it sometimes fails. See @bold(Antialiasing).");
SET("hintersect","line spacing","double",0,0,"1.0000000");
SET("hintersect","viewport","viewport",0,0,"13 438 422 542");
SET("hintersect","visible","boolean",0,1,"no");
SET("htextnormals","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("htextnormals","font","GP_font",0,0,"times,,14.0000000");
SET("htextnormals","label","text",0,0,"@bold(Texture Normals)  -  When this option is ON, the programs sometimes corrects normals when textures that modify normals are used, in order to avoid \"strange\" surface effects. @italic(Note): this tends to happen when the scale of the normal perturbation is big.");
SET("htextnormals","line spacing","double",0,0,"1.0000000");
SET("htextnormals","viewport","viewport",0,0,"13 423 296 543");
SET("htextnormals","visible","boolean",0,1,"no");
SET("hfocalaper","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hfocalaper","font","GP_font",0,0,"times,,14.0000000");
SET("hfocalaper","label","text",0,0,"@bold(Focal Aperture)  -  This option sets the focal aperture of the @italic(camera) which is taking the picture. The default (0.0) is a pinhole camera. If nonzero, there is depth of field, so adaptive supersampling antialiasing will not work correctly. See @bold(Antialiasing).");
SET("hfocalaper","line spacing","double",0,0,"1.0000000");
SET("hfocalaper","viewport","viewport",0,0,"13 424 287 542");
SET("hfocalaper","visible","boolean",0,1,"no");
SET("hfocaldist","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hfocaldist","font","GP_font",0,0,"times,,14.0000000");
SET("hfocaldist","label","text",0,0,"@bold(Focal Distance)  -  This option specifies the focal distance of the @italic(camera) which is taking the picture. If this option is not checked, the distance from @italic(eye point) to @italic(look point) is used.");
SET("hfocaldist","line spacing","double",0,0,"1.0000000");
SET("hfocaldist","viewport","viewport",0,0,"13 461 293 542");
SET("hfocaldist","visible","boolean",0,1,"no");
SET("himagewh","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("himagewh","font","GP_font",0,0,"times,,14.0000000");
SET("himagewh","label","text",0,0,"@bold(Image Width/Height)  -  These options select the width/height of the rendered image, in pixels.");
SET("himagewh","line spacing","double",0,0,"1.0000000");
SET("himagewh","viewport","viewport",0,0,"13 481 258 543");
SET("himagewh","visible","boolean",0,1,"no");
SET("heyesep","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("heyesep","font","GP_font",0,0,"times,,14.0000000");
SET("heyesep","label","text",0,0,"@bold(Eye Separation)  -  Controls the separation between left and right eyes when using @italic(left eye) or @italic(right eye view). It can be an actual distance or a percentage of the distance from the @italic(eye point) to the @italic(look point). See @bold(View).");
SET("heyesep","line spacing","double",0,0,"1.0000000");
SET("heyesep","viewport","viewport",0,0,"14 459 355 542");
SET("heyesep","visible","boolean",0,1,"no");
SET("haliasthresh","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("haliasthresh","font","GP_font",0,0,"times,,14.0000000");
SET("haliasthresh","label","text",0,0,"@bold(Aliasing Threshold)  -  This is one of the three major controls of image quality. It controls pixel supersampling and ranges from 0 (best) to 1 (poor). The good range is 0.1 to 0.03. See @bold(Supersampling).");
SET("haliasthresh","line spacing","double",0,0,"1.0000000");
SET("haliasthresh","viewport","viewport",0,0,"13 459 362 542");
SET("haliasthresh","visible","boolean",0,1,"no");
SET("unnamed object 0","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("unnamed object 0","font","GP_font",0,0,"times,,14.0000000");
SET("unnamed object 0","label","text",0,0,"@bold(Cluster Size)  -  As part of scene processing, it groups scene objects in clusters. This option lets you specify how many objects there should be in a cluster. @italic(Note): use a low value for sparse scenes and an high value (8 or more) for very dense scenes.");
SET("unnamed object 0","line spacing","double",0,0,"1.0000000");
SET("unnamed object 0","viewport","viewport",0,0,"13 442 360 543");
SET("unnamed object 0","visible","boolean",0,1,"no");
SET("hantialias","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hantialias","font","GP_font",0,0,"times,,14.0000000");
SET("hantialias","label","text",0,0,"@bold(Antialiasing)  -  This is a method which smoothes out rough edges caused by visible pixels, eliminating the \"jaggies\". The program uses one of three methods: @italic(normal supersampling), @italic(semi-adaptive supersampling) or @italic(adaptive supersampling). @italic(Note): normal supersampling should be used with non-zero focal apertures. See @bold(Focal Aperture), @bold(Supersampling), @bold(Intersect).");
SET("hantialias","line spacing","double",0,0,"1.0000000");
SET("hantialias","viewport","viewport",0,0,"13 424 397 542");
SET("hantialias","visible","boolean",0,1,"no");
SET("hambientlev","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hambientlev","font","GP_font",0,0,"times,,14.0000000");
SET("hambientlev","label","text",0,0,"@bold(Ambient Samples)  -  This option defines the maximum number of distributed rays to be used in ambient lighting calculations. @italic(Note): use low values!");
SET("hambientlev","line spacing","double",0,0,"1.0000000");
SET("hambientlev","viewport","viewport",0,0,"13 477 323 543");
SET("hambientlev","visible","boolean",0,1,"no");
SET("hambientthresh","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hambientthresh","font","GP_font",0,0,"times,,14.0000000");
SET("hambientthresh","label","text",0,0,"@bold(Ambient Threshold)  -  This is one of the three major controls of image quality. It controls ambient rays distribution caching and ranges from near 0 (best) to 1 (poor). The good range is 0.01 to 0.00001. A value of 0 means no ambient threshold. See @bold(Ambient Levels).");
SET("hambientthresh","line spacing","double",0,0,"1.0000000");
SET("hambientthresh","viewport","viewport",0,0,"13 438 343 542");
SET("hambientthresh","visible","boolean",0,1,"no");
SET("hambientlevels","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("hambientlevels","font","GP_font",0,0,"times,,14.0000000");
SET("hambientlevels","label","text",0,0,"@bold(Ambient Levels)  -  This option defines the number of shading levels (shading tree depth) in which ambient lighting calculations will be done through ray distribution. @italic(Note): use low values!");
SET("hambientlevels","line spacing","double",0,0,"1.0000000");
SET("hambientlevels","viewport","viewport",0,0,"13 458 357 541");
SET("hambientlevels","visible","boolean",0,1,"no");
SET("label distance","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("label distance","font","GP_font",0,0,"times,,14.0000000");
SET("label distance","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("label distance","label","text",0,0,"Focal distance:");
SET("label distance","shrink to fit","boolean",0,0,"yes");
SET("label distance","viewport","viewport",0,0,"13 322 110 350");
SET("label aperture","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("label aperture","font","GP_font",0,0,"times,,14.0000000");
SET("label aperture","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("label aperture","label","text",0,0,"Focal aperture:");
SET("label aperture","shrink to fit","boolean",0,0,"yes");
SET("label aperture","viewport","viewport",0,0,"11 357 109 385");
SET("Files: menu","active display","SUIT_enum",0,0,"\"vertical\" of {\"vertical\"}");
SET("Files: menu","font","GP_font",0,0,"times,,18.0000000");
SET("Files: menu","stuck down","boolean",0,0,"no");
SET("Files: menu","viewport","viewport",0,0,"690 70 791 143");
SET("Files: menu","visible","boolean",0,0,"no");
SET("SFF file","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("SFF file","border raised","boolean",0,0,"yes");
SET("SFF file","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("SFF file","disabled","boolean",0,0,"no");
SET("SFF file","font","GP_font",0,0,"times,,14.0000000");
SET("SFF file","has background","boolean",0,0,"yes");
SET("SFF file","has border","boolean",0,0,"no");
SET("SFF file","justification","SUIT_enum",0,0,"\"left\" of {\"left\" \"center\" \"right\"}");
SET("SFF file","label","text",0,0,"SFF file");
SET("SFF file","shrink to fit","boolean",0,0,"no");
SET("SFF file","viewport","viewport",0,0,"4 38 97 71");
SET("Picture file","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Picture file","border raised","boolean",0,0,"yes");
SET("Picture file","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Picture file","disabled","boolean",0,0,"no");
SET("Picture file","font","GP_font",0,0,"times,,14.0000000");
SET("Picture file","has background","boolean",0,0,"yes");
SET("Picture file","has border","boolean",0,0,"no");
SET("Picture file","justification","SUIT_enum",0,0,"\"left\" of {\"left\" \"center\" \"right\"}");
SET("Picture file","label","text",0,0,"Picture file");
SET("Picture file","shrink to fit","boolean",0,0,"no");
SET("Picture file","viewport","viewport",0,0,"4 2 97 34");
SET("Separation: menu","active display","SUIT_enum",0,0,"\"vertical\" of {\"vertical\"}");
SET("Separation: menu","font","GP_font",0,0,"times,,14.0000000");
SET("Separation: menu","stuck down","boolean",0,0,"no");
SET("Separation: menu","viewport","viewport",0,0,"614 402 693 467");
SET("Separation: menu","visible","boolean",0,0,"no");
SET("Absolute","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Absolute","border raised","boolean",0,0,"yes");
SET("Absolute","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Absolute","disabled","boolean",0,0,"no");
SET("Absolute","has background","boolean",0,0,"yes");
SET("Absolute","has border","boolean",0,0,"no");
SET("Absolute","label","text",0,0,"Absolute");
SET("Absolute","shrink to fit","boolean",0,0,"no");
SET("Absolute","viewport","viewport",0,0,"4 34 75 63");
SET("% of Gaze","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("% of Gaze","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("% of Gaze","disabled","boolean",0,0,"no");
SET("% of Gaze","has border","boolean",0,0,"no");
SET("% of Gaze","label","text",0,0,"% of Gaze");
SET("% of Gaze","shrink to fit","boolean",0,0,"no");
SET("% of Gaze","viewport","viewport",0,0,"4 2 75 30");
SET("Aperture","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Aperture","altered","boolean",0,0,"no");
SET("Aperture","calculate lines","boolean",0,0,"no");
SET("Aperture","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Aperture","cursor x","int",0,0,"5");
SET("Aperture","cursor y","int",0,0,"8");
SET("Aperture","has a tab","boolean",0,0,"no");
SET("Aperture","highlight block","boolean",0,0,"no");
SET("Aperture","last mark index","int",0,0,"0");
SET("Aperture","number of lines","int",0,0,"1");
SET("Aperture","paint block only","boolean",0,0,"no");
SET("Aperture","read only","boolean",0,0,"no");
SET("Aperture","start x","int",0,0,"5");
SET("Aperture","start y","double",0,0,"23.0000000");
SET("Aperture","viewport","viewport",0,0,"115 356 167 384");
SET("Messages's \"visible\"","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Messages's \"visible\"","callback function","SUIT_functionPointer",0,0,"ChainedPropertyCallback");
SET("Messages's \"visible\"","chained from property type","text",0,0,"boolean");
SET("Messages's \"visible\"","chained to object","text",0,0,"Messages");
SET("Messages's \"visible\"","chained to property","text",0,0,"visible");
SET("Messages's \"visible\"","chained to property type","text",0,0,"boolean");
SET("Messages's \"visible\"","current value","boolean",0,0,"yes");
SET("Messages's \"visible\"","disabled","boolean",0,0,"no");
SET("Messages's \"visible\"","label","text",0,0,"Show/Hide");
SET("Messages's \"visible\"","viewport","viewport",0,0,"327 210 430 238");
SET("message label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("message label","font","GP_font",0,0,"times,,18.0000000");
SET("message label","foreground color","GP_color",0,0,"black, black");
SET("message label","has border","boolean",0,0,"no");
SET("message label","label","text",0,0,"Messages");
SET("message label","viewport","viewport",0,0,"24 211 329 234");
SET("onoff stacker","active display","SUIT_enum",0,0,"\"vertical stacking\" of {\"horizontal stacking\" \"vertical stacking\"}");
SET("onoff stacker","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("onoff stacker","viewport","viewport",0,0,"459 7 667 136");
SET("TextNormals","active display","SUIT_enum",0,0,"\"dot in circle\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("TextNormals","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("TextNormals","disabled","boolean",0,0,"yes");
SET("TextNormals","label","text",0,0,"Check normals with textures");
SET("TextNormals","original height","int",0,1,"21");
SET("TextNormals","original width","int",0,1,"201");
SET("TextNormals","shrink to fit","boolean",0,0,"no");
SET("TextNormals","viewport","viewport",0,0,"4 109 204 127");
SET("Jitter","active display","SUIT_enum",0,0,"\"dot in circle\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Jitter","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Jitter","disabled","boolean",0,0,"no");
SET("Jitter","label","text",0,0,"Use jittering");
SET("Jitter","original height","int",0,1,"21");
SET("Jitter","original width","int",0,1,"201");
SET("Jitter","shrink to fit","boolean",0,0,"no");
SET("Jitter","viewport","viewport",0,0,"4 88 204 105");
SET("Adjust","active display","SUIT_enum",0,0,"\"dot in circle\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Adjust","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Adjust","disabled","boolean",0,0,"no");
SET("Adjust","label","text",0,0,"Adjust intersections");
SET("Adjust","original height","int",0,1,"27");
SET("Adjust","original width","int",0,1,"193");
SET("Adjust","shrink to fit","boolean",0,0,"no");
SET("Adjust","viewport","viewport",0,0,"4 66 204 84");
SET("Contrast","active display","SUIT_enum",0,0,"\"dot in circle\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Contrast","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Contrast","disabled","boolean",0,0,"yes");
SET("Contrast","label","text",0,0,"Use contrast in antialiasing");
SET("Contrast","shrink to fit","boolean",0,0,"no");
SET("Contrast","viewport","viewport",0,0,"4 45 204 62");
SET("Raw","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Raw","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Raw","disabled","boolean",0,0,"no");
SET("Raw","label","text",0,0,"Raw image");
SET("Raw","original height","int",0,1,"26");
SET("Raw","original width","int",0,1,"193");
SET("Raw","shrink to fit","boolean",0,0,"no");
SET("Raw","viewport","viewport",0,0,"4 23 204 41");
SET("Back","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("Back","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Back","disabled","boolean",0,0,"no");
SET("Back","label","text",0,0,"Background image");
SET("Back","original height","int",0,1,"25");
SET("Back","original width","int",0,1,"193");
SET("Back","shrink to fit","boolean",0,0,"no");
SET("Back","viewport","viewport",0,0,"4 2 204 19");
SET("Messages","active display","SUIT_enum",0,0,"\"bulletin board\" of {\"bulletin board\"}");
SET("Messages","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages","font","GP_font",0,0,"courier,,10.0000000");
SET("Messages","has border","boolean",0,0,"no");
SET("Messages","viewport","viewport",0,0,"14 11 427 209");
SET("Messages","visible","boolean",0,1,"yes");
SET("Messages: text editor","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Messages: text editor","altered","boolean",0,0,"yes");
SET("Messages: text editor","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages: text editor","cut buffer","text",0,0,"
Lighting mode      : NO TRANSLUCENT SHADOWS
Normal mode        : NO NORMAL CORRECTION
Normal check mode  : NO NORMAL TEXTURE CORRECTION
Shading mode       : PHONG MODEL
Raw mode           : OFF
Texture mode       : NO TEXTURES
View mode          : NORMAL
Focal aperture     : 0 - PINHOLE CAMERA
Focal distance     : GAZE
Output format      : PIC
Info: options ok
Info: scene ok
Info: reading - 1.28333 second(s) CPU time
Info: enclosing - 0 second(s) CPU time
Info: tracing - 5.08333 second(s) CPU time");
SET("Messages: text editor","has a tab","boolean",0,0,"no");
SET("Messages: text editor","has border","boolean",0,0,"yes");
SET("Messages: text editor","number of lines","int",0,0,"27");
SET("Messages: text editor","paint block only","boolean",0,0,"no");
SET("Messages: text editor","read only","boolean",0,0,"yes");
SET("Messages: text editor","viewport","viewport",0,0,"11 5 372 193");
SET("Messages: scroll bar","active display","SUIT_enum",0,0,"\"scroll bar\" of {\"scroll bar\" \"vertical thermometer\" \"horizontal thermometer\" \"pie slice\" \"speedometer\"}");
SET("Messages: scroll bar","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages: scroll bar","current value","double",0,0,"26.0000000");
SET("Messages: scroll bar","granularity","double",0,0,"1.0000000");
SET("Messages: scroll bar","has border","boolean",0,0,"yes");
SET("Messages: scroll bar","maximum value","double",0,0,"27.0000000");
SET("Messages: scroll bar","minimum value","double",0,0,"1.0000000");
SET("Messages: scroll bar","percent full","double",0,0,"0.2000000");
SET("Messages: scroll bar","viewport","viewport",0,0,"382 5 395 193");
SET("Messages: scroll bar: first arrow","active display","SUIT_enum",0,0,"\"motif\" of {\"simple arrow\" \"motif\"}");
SET("Messages: scroll bar: first arrow","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages: scroll bar: first arrow","direction","SUIT_enum",0,0,"\"up\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("Messages: scroll bar: first arrow","has border","boolean",0,0,"no");
SET("Messages: scroll bar: first arrow","viewport","viewport",0,0,"0 175 13 188");
SET("Messages: scroll bar: elevator","active display","SUIT_enum",0,0,"\"motif\" of {\"motif\"}");
SET("Messages: scroll bar: elevator","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages: scroll bar: elevator","current value","double",0,0,"0.9615385");
SET("Messages: scroll bar: elevator","has border","boolean",0,0,"no");
SET("Messages: scroll bar: elevator","percent full","double",0,0,"0.2000000");
SET("Messages: scroll bar: elevator","viewport","viewport",0,0,"0 13 13 175");
SET("Messages: scroll bar: second arrow","active display","SUIT_enum",0,0,"\"motif\" of {\"simple arrow\" \"motif\"}");
SET("Messages: scroll bar: second arrow","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Messages: scroll bar: second arrow","direction","SUIT_enum",0,0,"\"down\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("Messages: scroll bar: second arrow","has border","boolean",0,0,"no");
SET("Messages: scroll bar: second arrow","viewport","viewport",0,0,"0 0 13 13");
SET("cluster label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("cluster label","font","GP_font",0,0,"times,,14.0000000");
SET("cluster label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("cluster label","label","text",0,0,"Cluster size:");
SET("cluster label","viewport","viewport",0,0,"35 398 109 429");
SET("Cluster","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Cluster","altered","boolean",0,0,"yes");
SET("Cluster","append to buffer","boolean",0,0,"no");
SET("Cluster","calculate lines","boolean",0,0,"no");
SET("Cluster","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Cluster","cursor index","int",0,0,"1");
SET("Cluster","cursor x","int",0,0,"13");
SET("Cluster","cursor y","int",0,0,"8");
SET("Cluster","cut buffer","text",0,0,"4");
SET("Cluster","has a tab","boolean",0,0,"no");
SET("Cluster","highlight block","boolean",0,0,"no");
SET("Cluster","input sequence","text",0,0,"");
SET("Cluster","last click time","double",0,0,"0.0000000");
SET("Cluster","last mark index","int",0,0,"0");
SET("Cluster","mark end index","int",0,0,"0");
SET("Cluster","mark index","int",0,0,"0");
SET("Cluster","number of lines","int",0,0,"1");
SET("Cluster","paint block only","boolean",0,0,"no");
SET("Cluster","pre cursor index","int",0,0,"0");
SET("Cluster","read only","boolean",0,0,"no");
SET("Cluster","start x","int",0,0,"5");
SET("Cluster","start y","double",0,0,"23.0000000");
SET("Cluster","viewport","viewport",0,0,"115 399 167 427");
SET("Samples","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Samples","altered","boolean",0,0,"yes");
SET("Samples","append to buffer","boolean",0,0,"no");
SET("Samples","calculate lines","boolean",0,0,"yes");
SET("Samples","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Samples","cursor index","int",0,0,"1");
SET("Samples","cursor x","int",0,0,"5");
SET("Samples","cursor y","int",0,0,"8");
SET("Samples","has a tab","boolean",0,0,"no");
SET("Samples","highlight block","boolean",0,0,"no");
SET("Samples","input sequence","text",0,0,"");
SET("Samples","last click time","double",0,0,"65853000170.0000000");
SET("Samples","last mark index","int",0,0,"1");
SET("Samples","mark end index","int",0,0,"1");
SET("Samples","mark index","int",0,0,"1");
SET("Samples","number of lines","int",0,0,"1");
SET("Samples","paint block only","boolean",0,0,"no");
SET("Samples","pre cursor index","int",0,0,"0");
SET("Samples","read only","boolean",0,0,"no");
SET("Samples","start x","int",0,0,"5");
SET("Samples","start y","double",0,0,"23.0000000");
SET("Samples","viewport","viewport",0,0,"115 435 167 463");
SET("Samples","visible","boolean",0,0,"no");
SET("samples label","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("samples label","font","GP_font",0,0,"times,,14.0000000");
SET("samples label","justification","SUIT_enum",0,0,"\"right\" of {\"left\" \"center\" \"right\"}");
SET("samples label","label","text",0,0,"Ambient samples:");
SET("samples label","viewport","viewport",0,0,"0 426 109 458");
SET("message place mat","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("message place mat","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("message place mat","viewport","viewport",0,0,"8 6 431 240");
SET("place 0","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("place 0","background color","GP_color",0,0,"(20070 27238 37273), white");
SET("place 0","border type","SUIT_enum",0,0,"\"motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("place 0","viewport","viewport",0,0,"15 556 163 590");
SET("thres place","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("thres place","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("thres place","viewport","viewport",0,0,"195 446 340 589");
SET("level mat","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("level mat","border type","SUIT_enum",0,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("level mat","viewport","viewport",0,0,"363 446 522 589");


} /* end of INIT_suiRoutine */



void SUIT_initFromCode (char *programName)
{
    SUIT_interiorInitFromCode (programName, INIT_suiRoutine, THE_SCREEN_WIDTH,
                               THE_SCREEN_HEIGHT, THE_SCREEN_DEPTH);
}
